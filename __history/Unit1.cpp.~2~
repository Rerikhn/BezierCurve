//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;

int x1, x2, x3, y1, y2, y3;

int getPt(int, int, float);

//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner){

	int xo, yo;

	xo = PaintBox1->Width / 2;
	yo = PaintBox1->Height / 2;

	x1 = xo - 200;
	x2 = xo;
	x3 = xo + 50;
	y1 = yo;
	y2 = yo - 200;
	y3 = yo;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Repaint1Click(TObject *Sender)
{
	PaintBox1->Repaint();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Bezier1Click(TObject *Sender)
{
	int xa, ya, xb, yb, x, y;

	PaintBox1->Canvas->Pen->Width = 1;

	PaintBox1->Canvas->Ellipse(x1 - 3, y1 - 3, x1 + 3, y1 + 3);
	PaintBox1->Canvas->Ellipse(x2 - 3, y2 - 3, x2 + 3, y2 + 3);
	PaintBox1->Canvas->Ellipse(x3 - 3, y3 - 3, x3 + 3, y3 + 3);

	PaintBox1->Canvas->Pen->Color = clBlue;
	PaintBox1->Canvas->MoveTo(x1, y1);
	PaintBox1->Canvas->LineTo(x2, y2);
	PaintBox1->Canvas->MoveTo(x2, y2);
	PaintBox1->Canvas->LineTo(x3, y3);

	PaintBox1->Canvas->Pen->Color = clRed;
	for (float i = 0; i < 1; i+=0.00001f) {

		xa = getPt( x1 , x2 , i );
		ya = getPt( y1 , y2 , i );
		xb = getPt( x2 , x3 , i );
		yb = getPt( y2 , y3 , i );

		x = getPt( xa , xb , i );
		y = getPt( ya , yb , i );

		PaintBox1->Canvas->Pixels[x][y] = clBlack;
	}
}

int getPt(int n1, int n2, float perc) {
	int diff = n2 - n1;
	return n1 + (diff * perc);
}
//---------------------------------------------------------------------------
